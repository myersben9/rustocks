// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/pricing_data.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PricingData_QuoteType int32

const (
	PricingData_NONE           PricingData_QuoteType = 0
	PricingData_ALTSYMBOL      PricingData_QuoteType = 5
	PricingData_HEARTBEAT      PricingData_QuoteType = 7
	PricingData_EQUITY         PricingData_QuoteType = 8
	PricingData_INDEX          PricingData_QuoteType = 9
	PricingData_MUTUALFUND     PricingData_QuoteType = 11
	PricingData_MONEYMARKET    PricingData_QuoteType = 12
	PricingData_OPTION         PricingData_QuoteType = 13
	PricingData_CURRENCY       PricingData_QuoteType = 14
	PricingData_WARRANT        PricingData_QuoteType = 15
	PricingData_BOND           PricingData_QuoteType = 17
	PricingData_FUTURE         PricingData_QuoteType = 18
	PricingData_ETF            PricingData_QuoteType = 20
	PricingData_COMMODITY      PricingData_QuoteType = 23
	PricingData_ECNQUOTE       PricingData_QuoteType = 28
	PricingData_CRYPTOCURRENCY PricingData_QuoteType = 41
	PricingData_INDICATOR      PricingData_QuoteType = 42
	PricingData_INDUSTRY       PricingData_QuoteType = 1000
)

// Enum value maps for PricingData_QuoteType.
var (
	PricingData_QuoteType_name = map[int32]string{
		0:    "NONE",
		5:    "ALTSYMBOL",
		7:    "HEARTBEAT",
		8:    "EQUITY",
		9:    "INDEX",
		11:   "MUTUALFUND",
		12:   "MONEYMARKET",
		13:   "OPTION",
		14:   "CURRENCY",
		15:   "WARRANT",
		17:   "BOND",
		18:   "FUTURE",
		20:   "ETF",
		23:   "COMMODITY",
		28:   "ECNQUOTE",
		41:   "CRYPTOCURRENCY",
		42:   "INDICATOR",
		1000: "INDUSTRY",
	}
	PricingData_QuoteType_value = map[string]int32{
		"NONE":           0,
		"ALTSYMBOL":      5,
		"HEARTBEAT":      7,
		"EQUITY":         8,
		"INDEX":          9,
		"MUTUALFUND":     11,
		"MONEYMARKET":    12,
		"OPTION":         13,
		"CURRENCY":       14,
		"WARRANT":        15,
		"BOND":           17,
		"FUTURE":         18,
		"ETF":            20,
		"COMMODITY":      23,
		"ECNQUOTE":       28,
		"CRYPTOCURRENCY": 41,
		"INDICATOR":      42,
		"INDUSTRY":       1000,
	}
)

func (x PricingData_QuoteType) Enum() *PricingData_QuoteType {
	p := new(PricingData_QuoteType)
	*p = x
	return p
}

func (x PricingData_QuoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PricingData_QuoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pricing_data_proto_enumTypes[0].Descriptor()
}

func (PricingData_QuoteType) Type() protoreflect.EnumType {
	return &file_proto_pricing_data_proto_enumTypes[0]
}

func (x PricingData_QuoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PricingData_QuoteType.Descriptor instead.
func (PricingData_QuoteType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pricing_data_proto_rawDescGZIP(), []int{0, 0}
}

type PricingData_OptionType int32

const (
	PricingData_CALL PricingData_OptionType = 0
	PricingData_PUT  PricingData_OptionType = 1
)

// Enum value maps for PricingData_OptionType.
var (
	PricingData_OptionType_name = map[int32]string{
		0: "CALL",
		1: "PUT",
	}
	PricingData_OptionType_value = map[string]int32{
		"CALL": 0,
		"PUT":  1,
	}
)

func (x PricingData_OptionType) Enum() *PricingData_OptionType {
	p := new(PricingData_OptionType)
	*p = x
	return p
}

func (x PricingData_OptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PricingData_OptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pricing_data_proto_enumTypes[1].Descriptor()
}

func (PricingData_OptionType) Type() protoreflect.EnumType {
	return &file_proto_pricing_data_proto_enumTypes[1]
}

func (x PricingData_OptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PricingData_OptionType.Descriptor instead.
func (PricingData_OptionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pricing_data_proto_rawDescGZIP(), []int{0, 1}
}

type PricingData_MarketHoursType int32

const (
	PricingData_PRE_MARKET            PricingData_MarketHoursType = 0
	PricingData_REGULAR_MARKET        PricingData_MarketHoursType = 1
	PricingData_POST_MARKET           PricingData_MarketHoursType = 2
	PricingData_EXTENDED_HOURS_MARKET PricingData_MarketHoursType = 3
)

// Enum value maps for PricingData_MarketHoursType.
var (
	PricingData_MarketHoursType_name = map[int32]string{
		0: "PRE_MARKET",
		1: "REGULAR_MARKET",
		2: "POST_MARKET",
		3: "EXTENDED_HOURS_MARKET",
	}
	PricingData_MarketHoursType_value = map[string]int32{
		"PRE_MARKET":            0,
		"REGULAR_MARKET":        1,
		"POST_MARKET":           2,
		"EXTENDED_HOURS_MARKET": 3,
	}
)

func (x PricingData_MarketHoursType) Enum() *PricingData_MarketHoursType {
	p := new(PricingData_MarketHoursType)
	*p = x
	return p
}

func (x PricingData_MarketHoursType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PricingData_MarketHoursType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pricing_data_proto_enumTypes[2].Descriptor()
}

func (PricingData_MarketHoursType) Type() protoreflect.EnumType {
	return &file_proto_pricing_data_proto_enumTypes[2]
}

func (x PricingData_MarketHoursType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PricingData_MarketHoursType.Descriptor instead.
func (PricingData_MarketHoursType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pricing_data_proto_rawDescGZIP(), []int{0, 2}
}

type PricingData struct {
	state             protoimpl.MessageState      `protogen:"open.v1"`
	Id                string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price             float32                     `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Time              int64                       `protobuf:"zigzag64,3,opt,name=time,proto3" json:"time,omitempty"`
	Currency          string                      `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Exchange          string                      `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
	QuoteType         PricingData_QuoteType       `protobuf:"varint,6,opt,name=quoteType,proto3,enum=yahoo.PricingData_QuoteType" json:"quoteType,omitempty"`
	MarketHours       PricingData_MarketHoursType `protobuf:"varint,7,opt,name=marketHours,proto3,enum=yahoo.PricingData_MarketHoursType" json:"marketHours,omitempty"`
	ChangePercent     float32                     `protobuf:"fixed32,8,opt,name=changePercent,proto3" json:"changePercent,omitempty"`
	DayVolume         int64                       `protobuf:"zigzag64,9,opt,name=dayVolume,proto3" json:"dayVolume,omitempty"`
	DayHigh           float32                     `protobuf:"fixed32,10,opt,name=dayHigh,proto3" json:"dayHigh,omitempty"`
	DayLow            float32                     `protobuf:"fixed32,11,opt,name=dayLow,proto3" json:"dayLow,omitempty"`
	Change            float32                     `protobuf:"fixed32,12,opt,name=change,proto3" json:"change,omitempty"`
	ShortName         string                      `protobuf:"bytes,13,opt,name=shortName,proto3" json:"shortName,omitempty"`
	ExpireDate        int64                       `protobuf:"zigzag64,14,opt,name=expireDate,proto3" json:"expireDate,omitempty"`
	OpenPrice         float32                     `protobuf:"fixed32,15,opt,name=openPrice,proto3" json:"openPrice,omitempty"`
	PreviousClose     float32                     `protobuf:"fixed32,16,opt,name=previousClose,proto3" json:"previousClose,omitempty"`
	StrikePrice       float32                     `protobuf:"fixed32,17,opt,name=strikePrice,proto3" json:"strikePrice,omitempty"`
	UnderlyingSymbol  string                      `protobuf:"bytes,18,opt,name=underlyingSymbol,proto3" json:"underlyingSymbol,omitempty"`
	OpenInterest      int64                       `protobuf:"zigzag64,19,opt,name=openInterest,proto3" json:"openInterest,omitempty"`
	OptionsType       PricingData_OptionType      `protobuf:"varint,20,opt,name=optionsType,proto3,enum=yahoo.PricingData_OptionType" json:"optionsType,omitempty"`
	MiniOption        int64                       `protobuf:"zigzag64,21,opt,name=miniOption,proto3" json:"miniOption,omitempty"`
	LastSize          int64                       `protobuf:"zigzag64,22,opt,name=lastSize,proto3" json:"lastSize,omitempty"`
	Bid               float32                     `protobuf:"fixed32,23,opt,name=bid,proto3" json:"bid,omitempty"`
	BidSize           int64                       `protobuf:"zigzag64,24,opt,name=bidSize,proto3" json:"bidSize,omitempty"`
	Ask               float32                     `protobuf:"fixed32,25,opt,name=ask,proto3" json:"ask,omitempty"`
	AskSize           int64                       `protobuf:"zigzag64,26,opt,name=askSize,proto3" json:"askSize,omitempty"`
	PriceHint         int64                       `protobuf:"zigzag64,27,opt,name=priceHint,proto3" json:"priceHint,omitempty"`
	Vol_24Hr          int64                       `protobuf:"zigzag64,28,opt,name=vol_24hr,json=vol24hr,proto3" json:"vol_24hr,omitempty"`
	VolAllCurrencies  int64                       `protobuf:"zigzag64,29,opt,name=volAllCurrencies,proto3" json:"volAllCurrencies,omitempty"`
	Fromcurrency      string                      `protobuf:"bytes,30,opt,name=fromcurrency,proto3" json:"fromcurrency,omitempty"`
	LastMarket        string                      `protobuf:"bytes,31,opt,name=lastMarket,proto3" json:"lastMarket,omitempty"`
	CirculatingSupply float64                     `protobuf:"fixed64,32,opt,name=circulatingSupply,proto3" json:"circulatingSupply,omitempty"`
	Marketcap         float64                     `protobuf:"fixed64,33,opt,name=marketcap,proto3" json:"marketcap,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PricingData) Reset() {
	*x = PricingData{}
	mi := &file_proto_pricing_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PricingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricingData) ProtoMessage() {}

func (x *PricingData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pricing_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricingData.ProtoReflect.Descriptor instead.
func (*PricingData) Descriptor() ([]byte, []int) {
	return file_proto_pricing_data_proto_rawDescGZIP(), []int{0}
}

func (x *PricingData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PricingData) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PricingData) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PricingData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PricingData) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *PricingData) GetQuoteType() PricingData_QuoteType {
	if x != nil {
		return x.QuoteType
	}
	return PricingData_NONE
}

func (x *PricingData) GetMarketHours() PricingData_MarketHoursType {
	if x != nil {
		return x.MarketHours
	}
	return PricingData_PRE_MARKET
}

func (x *PricingData) GetChangePercent() float32 {
	if x != nil {
		return x.ChangePercent
	}
	return 0
}

func (x *PricingData) GetDayVolume() int64 {
	if x != nil {
		return x.DayVolume
	}
	return 0
}

func (x *PricingData) GetDayHigh() float32 {
	if x != nil {
		return x.DayHigh
	}
	return 0
}

func (x *PricingData) GetDayLow() float32 {
	if x != nil {
		return x.DayLow
	}
	return 0
}

func (x *PricingData) GetChange() float32 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *PricingData) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *PricingData) GetExpireDate() int64 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

func (x *PricingData) GetOpenPrice() float32 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *PricingData) GetPreviousClose() float32 {
	if x != nil {
		return x.PreviousClose
	}
	return 0
}

func (x *PricingData) GetStrikePrice() float32 {
	if x != nil {
		return x.StrikePrice
	}
	return 0
}

func (x *PricingData) GetUnderlyingSymbol() string {
	if x != nil {
		return x.UnderlyingSymbol
	}
	return ""
}

func (x *PricingData) GetOpenInterest() int64 {
	if x != nil {
		return x.OpenInterest
	}
	return 0
}

func (x *PricingData) GetOptionsType() PricingData_OptionType {
	if x != nil {
		return x.OptionsType
	}
	return PricingData_CALL
}

func (x *PricingData) GetMiniOption() int64 {
	if x != nil {
		return x.MiniOption
	}
	return 0
}

func (x *PricingData) GetLastSize() int64 {
	if x != nil {
		return x.LastSize
	}
	return 0
}

func (x *PricingData) GetBid() float32 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *PricingData) GetBidSize() int64 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *PricingData) GetAsk() float32 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *PricingData) GetAskSize() int64 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

func (x *PricingData) GetPriceHint() int64 {
	if x != nil {
		return x.PriceHint
	}
	return 0
}

func (x *PricingData) GetVol_24Hr() int64 {
	if x != nil {
		return x.Vol_24Hr
	}
	return 0
}

func (x *PricingData) GetVolAllCurrencies() int64 {
	if x != nil {
		return x.VolAllCurrencies
	}
	return 0
}

func (x *PricingData) GetFromcurrency() string {
	if x != nil {
		return x.Fromcurrency
	}
	return ""
}

func (x *PricingData) GetLastMarket() string {
	if x != nil {
		return x.LastMarket
	}
	return ""
}

func (x *PricingData) GetCirculatingSupply() float64 {
	if x != nil {
		return x.CirculatingSupply
	}
	return 0
}

func (x *PricingData) GetMarketcap() float64 {
	if x != nil {
		return x.Marketcap
	}
	return 0
}

var File_proto_pricing_data_proto protoreflect.FileDescriptor

const file_proto_pricing_data_proto_rawDesc = "" +
	"\n" +
	"\x18proto/pricing_data.proto\x12\x05yahoo\"\xd4\v\n" +
	"\vPricingData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x02R\x05price\x12\x12\n" +
	"\x04time\x18\x03 \x01(\x12R\x04time\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x1a\n" +
	"\bexchange\x18\x05 \x01(\tR\bexchange\x12:\n" +
	"\tquoteType\x18\x06 \x01(\x0e2\x1c.yahoo.PricingData.QuoteTypeR\tquoteType\x12D\n" +
	"\vmarketHours\x18\a \x01(\x0e2\".yahoo.PricingData.MarketHoursTypeR\vmarketHours\x12$\n" +
	"\rchangePercent\x18\b \x01(\x02R\rchangePercent\x12\x1c\n" +
	"\tdayVolume\x18\t \x01(\x12R\tdayVolume\x12\x18\n" +
	"\adayHigh\x18\n" +
	" \x01(\x02R\adayHigh\x12\x16\n" +
	"\x06dayLow\x18\v \x01(\x02R\x06dayLow\x12\x16\n" +
	"\x06change\x18\f \x01(\x02R\x06change\x12\x1c\n" +
	"\tshortName\x18\r \x01(\tR\tshortName\x12\x1e\n" +
	"\n" +
	"expireDate\x18\x0e \x01(\x12R\n" +
	"expireDate\x12\x1c\n" +
	"\topenPrice\x18\x0f \x01(\x02R\topenPrice\x12$\n" +
	"\rpreviousClose\x18\x10 \x01(\x02R\rpreviousClose\x12 \n" +
	"\vstrikePrice\x18\x11 \x01(\x02R\vstrikePrice\x12*\n" +
	"\x10underlyingSymbol\x18\x12 \x01(\tR\x10underlyingSymbol\x12\"\n" +
	"\fopenInterest\x18\x13 \x01(\x12R\fopenInterest\x12?\n" +
	"\voptionsType\x18\x14 \x01(\x0e2\x1d.yahoo.PricingData.OptionTypeR\voptionsType\x12\x1e\n" +
	"\n" +
	"miniOption\x18\x15 \x01(\x12R\n" +
	"miniOption\x12\x1a\n" +
	"\blastSize\x18\x16 \x01(\x12R\blastSize\x12\x10\n" +
	"\x03bid\x18\x17 \x01(\x02R\x03bid\x12\x18\n" +
	"\abidSize\x18\x18 \x01(\x12R\abidSize\x12\x10\n" +
	"\x03ask\x18\x19 \x01(\x02R\x03ask\x12\x18\n" +
	"\aaskSize\x18\x1a \x01(\x12R\aaskSize\x12\x1c\n" +
	"\tpriceHint\x18\x1b \x01(\x12R\tpriceHint\x12\x19\n" +
	"\bvol_24hr\x18\x1c \x01(\x12R\avol24hr\x12*\n" +
	"\x10volAllCurrencies\x18\x1d \x01(\x12R\x10volAllCurrencies\x12\"\n" +
	"\ffromcurrency\x18\x1e \x01(\tR\ffromcurrency\x12\x1e\n" +
	"\n" +
	"lastMarket\x18\x1f \x01(\tR\n" +
	"lastMarket\x12,\n" +
	"\x11circulatingSupply\x18  \x01(\x01R\x11circulatingSupply\x12\x1c\n" +
	"\tmarketcap\x18! \x01(\x01R\tmarketcap\"\x80\x02\n" +
	"\tQuoteType\x12\b\n" +
	"\x04NONE\x10\x00\x12\r\n" +
	"\tALTSYMBOL\x10\x05\x12\r\n" +
	"\tHEARTBEAT\x10\a\x12\n" +
	"\n" +
	"\x06EQUITY\x10\b\x12\t\n" +
	"\x05INDEX\x10\t\x12\x0e\n" +
	"\n" +
	"MUTUALFUND\x10\v\x12\x0f\n" +
	"\vMONEYMARKET\x10\f\x12\n" +
	"\n" +
	"\x06OPTION\x10\r\x12\f\n" +
	"\bCURRENCY\x10\x0e\x12\v\n" +
	"\aWARRANT\x10\x0f\x12\b\n" +
	"\x04BOND\x10\x11\x12\n" +
	"\n" +
	"\x06FUTURE\x10\x12\x12\a\n" +
	"\x03ETF\x10\x14\x12\r\n" +
	"\tCOMMODITY\x10\x17\x12\f\n" +
	"\bECNQUOTE\x10\x1c\x12\x12\n" +
	"\x0eCRYPTOCURRENCY\x10)\x12\r\n" +
	"\tINDICATOR\x10*\x12\r\n" +
	"\bINDUSTRY\x10\xe8\a\"\x1f\n" +
	"\n" +
	"OptionType\x12\b\n" +
	"\x04CALL\x10\x00\x12\a\n" +
	"\x03PUT\x10\x01\"a\n" +
	"\x0fMarketHoursType\x12\x0e\n" +
	"\n" +
	"PRE_MARKET\x10\x00\x12\x12\n" +
	"\x0eREGULAR_MARKET\x10\x01\x12\x0f\n" +
	"\vPOST_MARKET\x10\x02\x12\x19\n" +
	"\x15EXTENDED_HOURS_MARKET\x10\x03B\x14Z\x12yahoo-stream/protob\x06proto3"

var (
	file_proto_pricing_data_proto_rawDescOnce sync.Once
	file_proto_pricing_data_proto_rawDescData []byte
)

func file_proto_pricing_data_proto_rawDescGZIP() []byte {
	file_proto_pricing_data_proto_rawDescOnce.Do(func() {
		file_proto_pricing_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pricing_data_proto_rawDesc), len(file_proto_pricing_data_proto_rawDesc)))
	})
	return file_proto_pricing_data_proto_rawDescData
}

var file_proto_pricing_data_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_pricing_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_pricing_data_proto_goTypes = []any{
	(PricingData_QuoteType)(0),       // 0: yahoo.PricingData.QuoteType
	(PricingData_OptionType)(0),      // 1: yahoo.PricingData.OptionType
	(PricingData_MarketHoursType)(0), // 2: yahoo.PricingData.MarketHoursType
	(*PricingData)(nil),              // 3: yahoo.PricingData
}
var file_proto_pricing_data_proto_depIdxs = []int32{
	0, // 0: yahoo.PricingData.quoteType:type_name -> yahoo.PricingData.QuoteType
	2, // 1: yahoo.PricingData.marketHours:type_name -> yahoo.PricingData.MarketHoursType
	1, // 2: yahoo.PricingData.optionsType:type_name -> yahoo.PricingData.OptionType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_pricing_data_proto_init() }
func file_proto_pricing_data_proto_init() {
	if File_proto_pricing_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pricing_data_proto_rawDesc), len(file_proto_pricing_data_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pricing_data_proto_goTypes,
		DependencyIndexes: file_proto_pricing_data_proto_depIdxs,
		EnumInfos:         file_proto_pricing_data_proto_enumTypes,
		MessageInfos:      file_proto_pricing_data_proto_msgTypes,
	}.Build()
	File_proto_pricing_data_proto = out.File
	file_proto_pricing_data_proto_goTypes = nil
	file_proto_pricing_data_proto_depIdxs = nil
}
